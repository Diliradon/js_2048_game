{"mappings":"AAAA;AAEA,MAAM,aAAa;AACnB,IAAI,QAAQ;OAAI,MAAM;CAAY,CAAC,GAAG,CAAC,IAAM,MAAM,YAAY,IAAI,CAAC;AACpE,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,MAAM,QAAQ,SAAS,gBAAgB,CAAC;AACxC,MAAM,cAAc;IAAC;IAAa;IAAc;IAAW;CAAY;AAEvE,MAAM,UAAU;IACd,cAAc,SAAS,cAAc,CAAC;IACtC,aAAa,SAAS,cAAc,CAAC;IACrC,YAAY,SAAS,cAAc,CAAC;AACtC;AAEA,MAAM,SAAS,SAAS,cAAc,CAAC;AAEvC,OAAO,gBAAgB,CAAC,SAAS;AAEjC,SAAS;IACP,QAAQ;IACR,SAAS,aAAa,CAAC,eAAe,SAAS,GAAG;IAClD,QAAQ;WAAI,MAAM;KAAY,CAAC,GAAG,CAAC,IAAM,MAAM,YAAY,IAAI,CAAC;IAEhE,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,IAAK;QACnC,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,IAC9B,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG;YACrB,QAAQ,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC;YAClC,QAAQ,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC;QACnC;IAEJ;AACF;AAEA,SAAS;IACP;IACA;IACA,eAAe;IACf,eAAe;IACf,SAAS,OAAO;AAClB;AAEA,SAAS,gBAAgB,CAAC,SAAS,CAAC;IAClC,IAAI,CAAC,YAAY,QAAQ,CAAC,EAAE,GAAG,KAAK,OAClC;IAGF,MAAM,YAAY,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC;IAE5C,OAAQ,EAAE,GAAG;QACX,KAAK;YACH;YACA;YACA;YACA;QAEF,KAAK;YACH;YACA;YACA;YACA;QAEF,KAAK;YACH;YACA;YACA;YACA;QAEF,KAAK;YACH;YACA;YACA;YACA;QAEF;YACE;IACJ;IAEA,SAAS,aAAa,CAAC,eAAe,SAAS,GAAG;IAElD,MAAM,cAAc,QAAQ;IAE5B,IAAI,aAAa;QACf,eAAe;QACf,SAAS,OAAO;IAClB;AACF;AAEA,MAAM,UAAU,CAAC;IACf,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,IAC9B,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,IAAK;QACnC,IAAI,SAAS,CAAC,EAAE,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,EAAE,EACjC,OAAO;IAEX;IAGF,OAAO;AACT;AAEA,SAAS,WAAW,GAAG;IACrB,OAAO,IAAI,MAAM,CAAC,CAAA,OAAQ,SAAS;AACrC;AAEA,SAAS,MAAM,GAAG;IAChB,MAAM,WAAW,WAAW;IAE5B,IAAI,SAAS;IAEb,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,GAAG,GAAG,IACrC,IAAI,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,IAAI,EAAE,EAAE;QAC/B,MAAM,CAAC,EAAE,IAAI;QACb,MAAM,CAAC,IAAI,EAAE,GAAG;QAChB,SAAS,MAAM,CAAC,EAAE;IACpB;IAGF,SAAS,WAAW;IAEpB,MAAO,OAAO,MAAM,GAAG,EACrB,OAAO,IAAI,CAAC;IAGd,OAAO;AACT;AAEA,SAAS;IACP,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,IAC9B,KAAK,CAAC,EAAE,GAAG,MAAM,KAAK,CAAC,EAAE;AAE7B;AAEA,SAAS;IACP,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,IAAK;QACnC,KAAK,CAAC,EAAE,CAAC,OAAO;QAChB,KAAK,CAAC,EAAE,GAAG,MAAM,KAAK,CAAC,EAAE;QACzB,KAAK,CAAC,EAAE,CAAC,OAAO;IAClB;AACF;AAEA,SAAS,oBAAoB,MAAM;IACjC,MAAM,cAAc,EAAE;IAEtB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IACjC,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IACjC,YAAY,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;IAIjC,OAAO;AACT;AAEA,SAAS,eAAe,GAAG,EAAE,OAAO;IAClC,MAAM,YAAY,EAAE;IAEpB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,KAAK,QAAS;QAC5C,MAAM,WAAW,IAAI,KAAK,CAAC,GAAG,IAAI;QAElC,UAAU,IAAI,CAAC;IACjB;IAEA,OAAO;AACT;AAEA,SAAS;IACP,MAAM,SAAS,eAAe,oBAAoB,QAAQ;IAE1D,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,IAC9B,MAAM,CAAC,EAAE,GAAG,MAAM,MAAM,CAAC,EAAE;IAG7B,MAAM,OAAO,eAAe,oBAAoB,SAAS;IAEzD,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,IAC9B,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE;AAEtB;AAEA,SAAS;IACP,MAAM,SAAS,eAAe,oBAAoB,QAAQ;IAE1D,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,IAAK;QACnC,MAAM,CAAC,EAAE,CAAC,OAAO;QACjB,MAAM,CAAC,EAAE,GAAG,MAAM,MAAM,CAAC,EAAE;QAC3B,MAAM,CAAC,EAAE,CAAC,OAAO;IACnB;IAEA,MAAM,OAAO,eAAe,oBAAoB,SAAS;IAEzD,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,IAC9B,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE;AAEtB;AAEA,SAAS;IACP,OAAO,SAAS,IAAI;IACpB,OAAO,SAAS,GAAG;IACnB,OAAO,KAAK,GAAG;IACf,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;AACxC;AAEA,SAAS,eAAe,MAAM;IAC5B,sCAAsC;IACtC,MAAM,aAAa,EAAE;IAErB,OAAO,OAAO,CAAC,CAAC,KAAK;QACnB,IAAI,OAAO,CAAC,CAAC,OAAO;YAClB,IAAI,UAAU,GACZ,WAAW,IAAI,CAAC;gBACd;gBAAU;YACZ;QAEJ;IACF;IAEA,kEAAkE;IAClE,IAAI,WAAW,MAAM,GAAG,GAAG;QACzB,MAAM,cAAc,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,WAAW,MAAM;QAChE,MAAM,aAAa,UAAU,CAAC,YAAY;QAE1C,MAAM,CAAC,WAAW,QAAQ,CAAC,CAAC,WAAW,QAAQ,CAAC,GAC5C,KAAK,MAAM,KAAK,MAAM,IAAI;IAChC;AACF;AAEA,SAAS,SAAS,KAAK,EAAE,OAAO;IAC9B,MAAM,OAAO,CAAC,CAAC,KAAK;QAClB,IAAI,OAAO,CAAC,CAAC,OAAO;YAClB,MAAM,YAAY,SAAS,MAAM,MAAM,GAAG;YAC1C,MAAM,OAAO,OAAO,CAAC,UAAU;YAE/B,IAAI,QAAQ,GAAG;gBACb,KAAK,WAAW,GAAG;gBACnB,KAAK,SAAS,GAAG,eAAe,CAAC,aAAa,EAAE,MAAM,CAAC;YACzD,OAAO;gBACL,KAAK,WAAW,GAAG;gBACnB,KAAK,SAAS,GAAG,CAAC,UAAU,CAAC;YAC/B;QACF;IACF;AACF;AAEA,SAAS;IACP,MAAM,OAAO,CAAC,CAAA;QACZ,IAAI,OAAO,CAAC,CAAA;YACV,IAAI,QAAQ,MAAM;gBAChB,QAAQ;gBACR,QAAQ,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC;YACtC;QACF;IACF;AACF;AAEA,SAAS;IACP,IAAI,iBAAiB,CAAC,eACpB,QAAQ,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC;AAEzC;AAEA,SAAS;IACP,OAAO,MAAM,KAAK,CAAC,CAAA,MAAO,IAAI,KAAK,CAAC,CAAA,OAAQ,SAAS;AACvD;AAEA,SAAS;IACP,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,IAC9B,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,IAAK;QACnC,MAAM,QAAQ,KAAK,CAAC,EAAE,CAAC,EAAE;QAEzB,IAAI,UAAU,GAAG;YACf,IAAI,IAAI,KAAK,UAAU,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,EACpC,OAAO;YAGT,IAAI,IAAI,KAAK,UAAU,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,EACpC,OAAO;QAEX;IACF;IAGF,OAAO;AACT","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst SIZE_BOARD = 4;\nlet board = [...Array(SIZE_BOARD)].map(() => Array(SIZE_BOARD).fill(0));\nlet score = 0;\nlet isWin = false;\nconst cells = document.querySelectorAll('.field-cell');\nconst allowedKeys = ['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'];\n\nconst message = {\n  messageStart: document.getElementById('message-start'),\n  messageLose: document.getElementById('message-lose'),\n  messageWin: document.getElementById('message-win'),\n};\n\nconst button = document.getElementById('start-button');\n\nbutton.addEventListener('click', setGame);\n\nfunction resetGame() {\n  score = 0;\n  document.querySelector('.game-score').innerText = score;\n  board = [...Array(SIZE_BOARD)].map(() => Array(SIZE_BOARD).fill(0));\n\n  for (let r = 0; r < SIZE_BOARD; r++) {\n    for (let c = 0; c < SIZE_BOARD; c++) {\n      if (board[r][c] === 0) {\n        message.messageLose.classList.add('hidden');\n        message.messageWin.classList.add('hidden');\n      }\n    }\n  }\n}\n\nfunction setGame() {\n  resetGame();\n  changeButton();\n  addRandomField(board);\n  addRandomField(board);\n  drawTile(board, cells);\n}\n\ndocument.addEventListener('keyup', (e) => {\n  if (!allowedKeys.includes(e.key) || isWin) {\n    return;\n  }\n\n  const prevBoard = JSON.parse(JSON.stringify(board));\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      slideLeft();\n      loseGameMessage();\n      winGameMessage();\n      break;\n\n    case 'ArrowRight':\n      slideRight();\n      loseGameMessage();\n      winGameMessage();\n      break;\n\n    case 'ArrowUp':\n      slideUp();\n      loseGameMessage();\n      winGameMessage();\n      break;\n\n    case 'ArrowDown':\n      slideDown();\n      loseGameMessage();\n      winGameMessage();\n      break;\n\n    default:\n      break;\n  }\n\n  document.querySelector('.game-score').innerText = score;\n\n  const isSameBoard = isMoved(prevBoard);\n\n  if (isSameBoard) {\n    addRandomField(board);\n    drawTile(board, cells);\n  }\n});\n\nconst isMoved = (prevBoard) => {\n  for (let r = 0; r < SIZE_BOARD; r++) {\n    for (let c = 0; c < SIZE_BOARD; c++) {\n      if (prevBoard[r][c] !== board[r][c]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nfunction deleteZero(row) {\n  return row.filter(item => item !== 0);\n}\n\nfunction slide(row) {\n  const rowClear = deleteZero(row);\n\n  let newRow = rowClear;\n\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      score += newRow[i];\n    }\n  }\n\n  newRow = deleteZero(newRow);\n\n  while (newRow.length < 4) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction slideLeft() {\n  for (let i = 0; i < SIZE_BOARD; i++) {\n    board[i] = slide(board[i]);\n  }\n}\n\nfunction slideRight() {\n  for (let i = 0; i < SIZE_BOARD; i++) {\n    board[i].reverse();\n    board[i] = slide(board[i]);\n    board[i].reverse();\n  }\n}\n\nfunction getItemsColumsBoard(matrix) {\n  const columsItems = [];\n\n  for (let r = 0; r < matrix.length; r++) {\n    for (let c = 0; c < matrix.length; c++) {\n      columsItems.push(matrix[c][r]);\n    }\n  }\n\n  return columsItems;\n}\n\nfunction getColumsBoard(arr, siceCut) {\n  const columsArr = [];\n\n  for (let i = 0; i < arr.length; i += siceCut) {\n    const subarray = arr.slice(i, i + siceCut);\n\n    columsArr.push(subarray);\n  }\n\n  return columsArr;\n}\n\nfunction slideUp() {\n  const colums = getColumsBoard(getItemsColumsBoard(board), SIZE_BOARD);\n\n  for (let r = 0; r < SIZE_BOARD; r++) {\n    colums[r] = slide(colums[r]);\n  }\n\n  const rows = getColumsBoard(getItemsColumsBoard(colums), SIZE_BOARD);\n\n  for (let r = 0; r < SIZE_BOARD; r++) {\n    board[r] = rows[r];\n  }\n}\n\nfunction slideDown() {\n  const colums = getColumsBoard(getItemsColumsBoard(board), SIZE_BOARD);\n\n  for (let r = 0; r < SIZE_BOARD; r++) {\n    colums[r].reverse();\n    colums[r] = slide(colums[r]);\n    colums[r].reverse();\n  }\n\n  const rows = getColumsBoard(getItemsColumsBoard(colums), SIZE_BOARD);\n\n  for (let r = 0; r < SIZE_BOARD; r++) {\n    board[r] = rows[r];\n  }\n}\n\nfunction changeButton() {\n  button.classList += ' restart';\n  button.innerText = 'Restart';\n  button.style = 'border: 2px solid red; color: #776e65; outline: none;';\n  message['messageStart'].classList.add('hidden');\n}\n\nfunction addRandomField(matrix) {\n  // Находим все пустые ячейки в матрице\n  const emptyCells = [];\n\n  matrix.forEach((row, rowIndex) => {\n    row.forEach((value, colIndex) => {\n      if (value === 0) {\n        emptyCells.push({\n          rowIndex, colIndex,\n        });\n      }\n    });\n  });\n\n  // Если есть пустые ячейки, выбираем случайную и добавляем 2 или 4\n  if (emptyCells.length > 0) {\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n    const randomCell = emptyCells[randomIndex];\n\n    matrix[randomCell.rowIndex][randomCell.colIndex]\n      = Math.random() < 0.9 ? 2 : 4;\n  }\n}\n\nfunction drawTile(tiles, element) {\n  tiles.forEach((row, rowInd) => {\n    row.forEach((value, colInd) => {\n      const cellIndex = rowInd * tiles.length + colInd;\n      const cell = element[cellIndex];\n\n      if (value > 0) {\n        cell.textContent = value;\n        cell.classList = 'field-cell' + ` field-cell--${value}`;\n      } else {\n        cell.textContent = null;\n        cell.classList = `field-cell`;\n      }\n    });\n  });\n}\n\nfunction winGameMessage() {\n  board.forEach(row => {\n    row.forEach(tile => {\n      if (tile >= 2048) {\n        isWin = true;\n        message.messageWin.classList.remove('hidden');\n      }\n    });\n  });\n}\n\nfunction loseGameMessage() {\n  if (isBoardFull() && !canMakeMove()) {\n    message.messageLose.classList.remove('hidden');\n  }\n}\n\nfunction isBoardFull() {\n  return board.every(row => row.every(tile => tile !== 0));\n}\n\nfunction canMakeMove() {\n  for (let r = 0; r < SIZE_BOARD; r++) {\n    for (let c = 0; c < SIZE_BOARD; c++) {\n      const value = board[r][c];\n\n      if (value !== 0) {\n        if (r < 3 && value === board[r + 1][c]) {\n          return true;\n        };\n\n        if (c < 3 && value === board[r][c + 1]) {\n          return true;\n        };\n      }\n    }\n  }\n\n  return false;\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}